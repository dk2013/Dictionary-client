# Use official Node.js image as the base
FROM node:18-alpine AS build

# Accept build arguments for environment variables
ARG REACT_APP_DOMAIN
ARG REACT_APP_EMAIL
ARG REACT_APP_TRAEFIK_PASSWORD_HASH
ARG REACT_APP_PROJECT_DIR
ARG REACT_APP_ENV
ARG NODE_ENV=production

# Set environment variables for the build stage
ENV REACT_APP_DOMAIN=$REACT_APP_DOMAIN
ENV REACT_APP_EMAIL=$REACT_APP_EMAIL
ENV REACT_APP_TRAEFIK_PASSWORD_HASH=$REACT_APP_TRAEFIK_PASSWORD_HASH
ENV REACT_APP_PROJECT_DIR=$REACT_APP_PROJECT_DIR
ENV REACT_APP_ENV=$REACT_APP_ENV
ENV NODE_ENV=$NODE_ENV

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package.json package-lock.json ./

# Install dependencies
RUN npm ci

# Copy the rest of the app
COPY . .

# Build the app
RUN NODE_OPTIONS="--max-old-space-size=2048" npm run build

# Production image, copy built assets from build stage
FROM nginx:alpine

# Copy built assets
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom nginx configuration for production (HTTP only, SSL handled by Traefik)
COPY nginx.prod.conf /etc/nginx/nginx.conf

# Expose port 80 only (SSL handled by Traefik)
EXPOSE 80

# Start Nginx server
CMD ["nginx", "-g", "daemon off;"] 